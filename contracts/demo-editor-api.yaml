openapi: 3.0.3
info:
  title: DemoEditor books referential service api
  description: Contract for exposition at DemoEditor company
  contact:
    email: api@demoeditor.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://demoeditor.org/api
tags:
  - name: books
    description: Manipulating books, existing and in project 
  - name: params
    description: Settings parameters for the books data referential service
    
paths:
  /books:
    post:
      tags:
        - books
      summary: Creates a book in referential service
      description: This operation allows the creation of a new book in data referential
      operationId: addbook
      requestBody:
        description: Description of a book, with at least the mandatory attributes
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        '201': 
          description: Successful Creation
        '403':
          description: Is returned if the operation is forbidden
        '422':
          description: Is returned if the content proposed for creation is invalid
  /books/{id}:
    get:
      tags:
        - books
      summary: List a book in referential service
      description: This operation allows the listing of a unique book in referential service
      operationId: getBookById
      parameters:
        - name: id
          in: path
          description: Identifier (internal or ISBN) of the book to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful read
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Is returned if an invalid id is provided
        '403':
          description: Is returned if reading operation on the book is forbidden
        '404':
          description: Is returned when the id provided is valid but no books exist with this identifier or ISBN number
    delete:
      tags:
        - books
      summary: Deletes a book from the referential service
      description: Rather than actually deleting the book from the data referential service, this operation actually makes it inactive and invisible. The data still there, but can only be retrieved by high-privilege or technical administrators. This is done in order to make possible full tracebility.
      operationId: deletBook
      parameters:
        - name: id
          in: path
          description: Identifier (internal or ISBN) of the book to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Is retured if the resource is deleted'
        '404':
          description: 'Is returned if the resource was not found'
  /params/statuses:
    put: 
      tags:
        - params
      summary: Defines the possible values of status for the books
      operationId: setStatuses
      description: |-
        This operation allows to customize the possible status key / value pairs. By default,
        the statuses will be the following:
        - 1 / Project : when the book is only a project
        - 2 / Draft : when the author has been choosen and a structure is written
        - 3 / Writing : when the author is writing the book
        - 4 / Review : during the review of the book
        - 5 / Validated: book reviewd, ready for printing and selling
        - 6 / Archived : no further edition is planned but sales go on
        - 7 / Retired : no further edition is planned but sales go on
      requestBody:
        description: Possible statuses for a book, as a list of key / value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Statuses'
        required: true
      responses:
        '200':
          description: Successful modification of the status codes
        '403':
          description: Is returned if the operation is forbidden
        '422':
          description: Is returned if the content proposed for creation is invalid
          
components:
  schemas:
    Book:
      required:
        - id
        - title
      type: object
      properties:
        id:
          type: string
        isbn:
          type: string
          description: Official ISBN number of the book, once obtained
          example: 978-2409002205
        title:
          type: string
        numbersOfPages:
          type: integer
          format: int16
        publishedAt: 
          type: string
          format: date
        editing:
          type: object
          properties: 
            numbersOfChapters:
              type: integer
              format: int16
            status:
              $ref: '#/components/schemas/Status'
            mainAuthor:
              $ref: '#/components/schemas/AuthorLink'
        production:
          type: object
          properties:
            typeOfPaper:
              type: string
            assemblyMode:
              type: string
              description: mechnical assemblying mode used to bind pages of the book in paper format
              enum:
                - bound
                - glued
            coverType:
              type: string
              enum: 
              - soft 
              - hard
        sales:
          type: object
          properties:
            price:
              type: number
              format: currency
            wightInGrams:
              type: integer
              format: int16
            salesCondition:
              type: string
    
          
